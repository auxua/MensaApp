<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutText" xml:space="preserve">
    <value>Diese App wurde entwickelt von Arno Schmetz und ist Open Source.
 Der Quelltext liegt auf Github (https://github.com/auxua/MensaApp). 

 Diese Software nutzt die json.NET library, die under MIT-Lizenz steht. (Lizenz: https://raw.githubusercontent.com/JamesNK/Newtonsoft.Json/master/LICENSE.md)</value>
  </data>
  <data name="Caloric" xml:space="preserve">
    <value>Brennwert</value>
  </data>
  <data name="Carbohydrates" xml:space="preserve">
    <value>Kohlenhydrate</value>
  </data>
  <data name="Closed" xml:space="preserve">
    <value>Geschlossen/Keine Daten</value>
  </data>
  <data name="ClosedSubtext" xml:space="preserve">
    <value>Evtl. über die Optionen manuell neu laden</value>
  </data>
  <data name="ConfigString" xml:space="preserve">
    <value>Einstellungen</value>
  </data>
  <data name="DishesString" xml:space="preserve">
    <value>Gerichte</value>
  </data>
  <data name="DownloadFail" xml:space="preserve">
    <value>Daten mindestens einer Mensa konnten nicht abgeholt werden (keine Internetverbindung?)</value>
  </data>
  <data name="Fat" xml:space="preserve">
    <value>Fett</value>
  </data>
  <data name="FilterTitle" xml:space="preserve">
    <value>Filter anwenden</value>
  </data>
  <data name="FurtherInfoTitle" xml:space="preserve">
    <value>Weitere Infos</value>
  </data>
  <data name="GetData" xml:space="preserve">
    <value>Lade Daten</value>
  </data>
  <data name="InfoCellDetail" xml:space="preserve">
    <value>Antippen für mehr Infos</value>
  </data>
  <data name="InfoCellText" xml:space="preserve">
    <value>Über die App</value>
  </data>
  <data name="LoadFail" xml:space="preserve">
    <value>Konnte Daten nicht laden</value>
  </data>
  <data name="MainDishesOnly" xml:space="preserve">
    <value>Nur Hauptgerichte</value>
  </data>
  <data name="MensenTitle" xml:space="preserve">
    <value>Mensen (de)aktivieren</value>
  </data>
  <data name="NextDayAuto" xml:space="preserve">
    <value>Auto-Select Tag</value>
  </data>
  <data name="NextDayAutoDescription" xml:space="preserve">
    <value>Wenn eingeschaltet, wir beim Start der App für die aktuelle Mensa automatisch der nächste Tag mit Gerichten ausgewählt.</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>Nein</value>
  </data>
  <data name="OpenWeb" xml:space="preserve">
    <value>Im Browser öffnen 📲</value>
  </data>
  <data name="PrivacyPolicy" xml:space="preserve">
    <value>Datenschutz</value>
  </data>
  <data name="Proteins" xml:space="preserve">
    <value>Eiweiß</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Daten neu Laden</value>
  </data>
  <data name="RefreshAlert" xml:space="preserve">
    <value>Wirklich Daten löschen und neu laden?</value>
  </data>
  <data name="RefreshDetail" xml:space="preserve">
    <value>Kann etwas dauern</value>
  </data>
  <data name="ShowNutrition" xml:space="preserve">
    <value>Nährwerte anzeigen</value>
  </data>
  <data name="TapHere" xml:space="preserve">
    <value>Hier drücken für Details</value>
  </data>
  <data name="TapWeb" xml:space="preserve">
    <value>Tippen für Details (online)</value>
  </data>
  <data name="TestText" xml:space="preserve">
    <value>Dies ist ein einfacher Test</value>
  </data>
  <data name="VegieOnly" xml:space="preserve">
    <value>Nur vegetarische Gerichte</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Ja</value>
  </data>
</root>